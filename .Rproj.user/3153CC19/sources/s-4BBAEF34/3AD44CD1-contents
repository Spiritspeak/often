#switchboard base code




# @name Switchboard_addAction
# @param condition A logical statement, to be evaluated when the entire switchboard is evaluated.
# If true, the associated action is executed.
# The content of this argument remains unevaluated and is converted to a language object,
# to be evaluated when the \code{evaluate} method is called.
# However, content that's placed between \code{.()} is evaluated when running this function.
# @param action A piece of code to be run when the associated if statement is evaluated and found to be true.
# Content placed within \code{.()} is evaluated when running this function,
# the rest remains unevaluated until the \code{evaluate} method is run.
# @param name A name for this particular if-then statement. Can be left empty.
# @param endChain Logical. Should this statement, if true, end the evaluation of any further statements?
# @exportMethod Switchboard addAction
# @examples
NULL
addAction<-function(.self,condition,action,name=NULL,endChain=F){
  "Add an if-then statement to a switchboard."
  condition<-bquote.arg(condition)
  action<-bquote.arg(action)

  stopifnot(is.character(name) || is.null(name),is.logical(endChain))
  .self$actions<-c(.self$actions,list(list(
                                           name=name,
                                           condition=condition,
                                           action=action,
                                           endChain=endChain)))
}

# @name Switchboard_delAction
# @param idx Character or numeric. The to-be-deleted if-then statement. You can provide either its name or its number.
# @exportMethod Switchboard delAction
# @examples
NULL

delAction<-function(.self,idx){
  "Remove an if-then statement from a switchboard."
  if(is.character(idx)){
    idx<-which(sapply(.self$actions,FUN=function(x){x$name}) == idx)
  }
  .self$actions<-.self$actions[-idx]
}

# @name Switchboard_evaluateAll
# Evaluate all if-then statements in a switchboard.
# @exportMethod Switchboard evaluate
# @examples
NULL
evaluateAll<-function(.self){
  "Evaluate all if-then statements in a switchboard."
  callenv<-new.env()

  for(act in .self$actions){
    message("Evaluating action ",act$name)
    try({
      if(eval(act$condition,envir=callenv)){
        eval(act$action,envir=callenv)
        if(act$endChain){
          break
        }
      }
    })
  }
}



#' @title Switchboard objects
#' @description switchboards are chains of if-then statements,
#' which can be very useful when long chains of such statements are needed,
#' such as when programming bots. Using switchboards allows users to divide parts of their chain
#' into different files or modules.
#'
#' @field actions A list of if-then statements.
#' @name Switchboard
#' @export Switchboard
#' @exportClass Switchboard
Switchboard<-setRefClass(Class="Switchboard",
                         fields=list(actions="list"),
                         methods=list(addAction=addAction,
                                      delAction=delAction,
                                      evaluateAll=evaluateAll))



